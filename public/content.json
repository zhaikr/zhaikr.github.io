{"meta":{"title":"JackRay的小博客","subtitle":null,"description":"儿时不知画中意，长大以是画中人","author":"JackRay","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-11-19T13:57:32.000Z","updated":"2018-11-19T13:57:32.936Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-11-19T13:57:50.000Z","updated":"2018-11-19T13:57:50.325Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2018-11-19T11:10:55.477Z","updated":"2018-11-19T08:25:28.146Z","comments":true,"path":"2018/11/19/hello-world/","link":"","permalink":"http://yoursite.com/2018/11/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"在Ubuntu上向Github上传项目","slug":"Ubuntu GitHub上传项目","date":"2018-11-19T02:00:00.000Z","updated":"2018-11-21T07:49:03.282Z","comments":true,"path":"2018/11/19/Ubuntu GitHub上传项目/","link":"","permalink":"http://yoursite.com/2018/11/19/Ubuntu GitHub上传项目/","excerpt":"","text":"一.安装Git-LFS 当向github上传一些项目时会有一些提示 12$ remote: warning: Large files detected.$ remote: error: File giant_file is 123.00 MB; this exceeds GitHub's file size limit of 100 MB 这时候就需要检查一下自己的github版本 1$ git --version 如下图所示：之后安装Git-LFS打开终端 1.添加apt-get源 1$ curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash 2.安装Git-LFS 1$ sudo apt-get install git-lfs 3.初始化Git-LFS 1$ git lfs install Git-LFS就安装完成了 二.github官网进行账号注册 点击个人信息里的Settings 然后点击SSH and GPS keys 里面会有title 和 key 三.生成SSH秘钥 1.检查秘钥 1$ ls ~/.ssh/ 如果有秘钥进行备份 1$ mkdir key_backup 1$ cp ~/.ssh/id_* key_backup 2.生成ssh秘钥 12$ ssh-keygen -t rsa -C \"your_email@example.com\" #将your_email@example.com替换成你自己的邮箱 之后会有提示直接回车就行了 3.复制公钥 1$ cat ~/.ssh/id_rsa.pub 复制打开的内容到之前网站中的 key，title 可以随便填写 4.验证测试 1$ ssh -T git@github.com 执行后提示： 12345Hi github! You’ve successfully authenticated, but GitHub does not provide shell access. 此时设置用户名和邮箱为注册Github时的名字$ git config --global user.name “xxx”$ git config --global user.email xxx@gmail.com name就是你github的名字, email是你github的邮箱 四.创建远程仓库在github上 在此我创建一个名叫example的仓库，在repository name中输入example然后点击create repository 点击复制地址 五.建立本地仓库 12345678$ mkdir example #向文件夹中添加文件，加入仓库$ cd example$ git init 初始化仓库$ touch example.txt 创建一个txt文件$ git add . //.表示全添加 或者指定文件名 #提交到仓库，这个版本名字叫$ git commit -m \"first commit\" #\"first commit\"为备注可自行修改 六.提交本地代码到远程（同步） 123$ git remote add origin git@github.com:yourgithubname/yourrepositoryname #此时用之前复制的仓库url 替换“git@github.com:yourgithubname/yourrepositoryname”$ git push -u origin master 然后需要输入 name 和你账号的password 此时就上传成功 之后我们就可以检查远程仓库 我们上传文件成功","categories":[{"name":"github","slug":"github","permalink":"http://yoursite.com/categories/github/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://yoursite.com/tags/Ubuntu/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"}]}]}